
Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.
/home/hpate061/anaconda3/envs/Research/lib/python3.11/site-packages/tensorly/backend/pytorch_backend.py:39: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  return torch.tensor(
Main: Msg: Starting intervention mode 1 on layer 0
  0%|                                                                                                                                                                                                                                                                                                                                                                                                              | 0/74 [00:00<?, ?it/s]The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
A decoder-only architecture is being used, but right-padding was detected! For correct generation results, please set `padding_side='left'` when initializing the tokenizer.
Main: Msg: Edited and put model on device in time 7 second
  0%|                                                                                                                                                                                                                                                                                                                                                                                                              | 0/74 [00:10<?, ?it/s]
Traceback (most recent call last):
  File "/data/home/hpate061/Laser_T/src/TASER_intervention_gptj_bbh_qa.py", line 286, in <module>
    predictions = experiment.intervene(model=model,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/hpate061/Laser_T/src/TASER_intervention_gptj_bbh_qa.py", line 103, in intervene
    log_prob_results = self.metrics.answer_log_prob(log_prob=log_prob,
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/hpate061/Laser_T/src/study_utils/metric_utils.py", line 268, in answer_log_prob
    answer_len = self.find_answer_len(question_answer_token_ids, answer, llm_tokenizer)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/hpate061/Laser_T/src/study_utils/metric_utils.py", line 257, in find_answer_len
    raise AssertionError(f" Did not find {answer} in {question_answer_token_ids}")
AssertionError:  Did not find basketball in tensor([  464,  6332,  2826,   416, 42167,  1215,  1765,   323,    78,   318,
         9669, 50256, 50256, 50256, 50256, 50256, 50256, 50256, 50256],
       device='cuda:0')